name: Build on Ubuntu

on:
  push:
    branches:
      - master
      - develop
      - v*

    tags:
      - v*

  pull_request:
    paths:
      - cmake/**
      - src/**
      - CMakeLists.txt
      - .github/**

jobs:
  job:
    name: ${{ matrix.os }}-${{ matrix.buildtype }}-luajit=${{ matrix.luajit }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-16.04, ubuntu-18.04]
        buildtype: [Debug, Release]
        luajit: [on, off]

    steps:
    - uses: actions/checkout@v2

    - name: Install Dependencies
      run: >
        sudo apt-get update && sudo apt-get install cmake build-essential
        liblua5.2-dev libmysqlclient-dev libboost-system-dev
        libboost-iostreams-dev libboost-filesystem-dev libpugixml-dev
        libcrypto++-dev libspdlog-dev libluajit-5.1-dev libboost-date-time-dev
        unrar zip

    - name: Prepare build Environment
      run: |
        mkdir build && cd build
        cmake -DCMAKE_BUILD_TYPE=${{ matrix.buildtype }} -DUSE_LUAJIT=${{ matrix.luajit }} ..

    - name: Build
      run: |
        cd build
        make -j `nproc`
        mv otbr ../

    - name: Clean workspace
      shell: bash
      run: find . -maxdepth 1 ! -name data ! -name config.lua.dist ! -name key.pem ! -name LICENSE ! -name README.md ! -name schema.sql -exec rm -r {} \;

    - name: Prepare datapack contents
      shell: bash
      run: |
        mv config.lua.dist config.lua
        unzip -o data/world/world.zip -d data/world/
        rm data/world/world.zip
        cd ..
        zip -r otservbr.zip otservbr-global

    - name: Upload binary
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}-otbr-amd64-${{ matrix.buildtype }}-LUAJIT=${{ matrix.luajit }}-${{ github.sha }}
        path: ${{ runner.workspace }}/otservbr.zip
